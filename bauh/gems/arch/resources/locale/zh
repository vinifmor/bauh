arch.action.rebuild_check.allow=允许重新安装检查
arch.action.rebuild_check.allow.desc=允许验证是否需要重新安装包
arch.action.rebuild_check.allow.status=允许重新安装检查
arch.action.rebuild_check.allow.confirm=允许重新安装检查 {} 吗？
arch.action.rebuild_check.ignore=忽略重新安装检查
arch.action.rebuild_check.ignore.desc=不验证包是否需要在系统上重新安装
arch.action.rebuild_check.ignore.status=忽略重新安装检查
arch.action.rebuild_check.ignore.confirm=忽略重新安装检查 {} 吗？
arch.action.db_locked.body.l1=系统的包数据库已锁定。
arch.action.db_locked.body.l2=需要解锁才能继续。
arch.action.db_locked.confirmation=解锁并继续
arch.action.db_locked.error=无法解锁数据库。
arch.action.db_locked.title=数据库已锁定
arch.action.disable_pkgbuild_edition=取消标记 PKGBUILD 为可编辑
arch.action.disable_pkgbuild_edition.confirm=取消标记 {} 的 PKGBUILD 为可编辑吗？
arch.action.disable_pkgbuild_edition.desc=在更新之前不允许编辑包的 PKGBUILD 文件
arch.action.disable_pkgbuild_edition.status=取消标记 PKGBUILD 为可编辑
arch.action.enable_pkgbuild_edition=标记 PKGBUILD 为可编辑
arch.action.enable_pkgbuild_edition.confirm=标记 {} 的 PKGBUILD 为可编辑吗？
arch.action.enable_pkgbuild_edition.desc=允许在更新之前编辑包的 PKGBUILD 文件
arch.action.enable_pkgbuild_edition.status=标记 PKGBUILD 为可编辑
arch.action.reinstall=重新安装
arch.action.reinstall.desc=尝试重新安装包
arch.action.reinstall.status=正在重新安装
arch.action.reinstall.confirm=是否要重新安装 {} ？
arch.action.reinstall.error.no_apidata=无法从 AUR 获取 {} 的信息
arch.aur.action.edit_pkgbuild.body=在继续之前编辑 {} 的 PKGBUILD 文件吗？
arch.aur.install.pgp.body=要安装 {}，需要接收以下 PGP 密钥
arch.aur.install.pgp.receive_fail=无法接收 PGP 密钥 {}
arch.aur.install.pgp.sign_fail=无法签署 PGP 密钥 {}
arch.aur.install.pgp.substatus=接收 PGP 密钥 {}
arch.aur.install.pgp.success=已接收并签署 PGP 密钥
arch.aur.install.pgp.title=需要 PGP 密钥
arch.aur.install.unknown_key.receive_error=无法接收公钥 {}
arch.aur.install.unknown_key.status=接收公钥 {}
arch.aur.install.validity_check.body={} 安装所需的一些源文件不健康。
arch.aur.install.validity_check.proceed=是否仍要继续？(不建议)
arch.aur.install.validity_check.title=完整性问题 {}
arch.aur.install.verifying_pgp=正在验证 PGP 密钥
arch.aur.build.list_output=检查构建的文件
arch.aur.sync.several_names.popup.body={} 的定义文件(PKGBUILD)配置了其他软件包的构建
arch.aur.sync.several_names.popup.bt_only_chosen=仅构建 {}
arch.aur.sync.several_names.popup.bt_selected=同时构建选定项
arch.building.package=构建软件包 {}
arch.can_work.not_arch_distro=仅适用于基于 ArchLinux 的发行版
arch.checking.conflicts=检查与 {} 的任何冲突
arch.checking.deps=检查 {} 的依赖项
arch.checking.missing_deps=验证 {} 缺失的依赖项
arch.clone=克隆 AUR 仓库 {}
arch.category.remove_from_aur=从 AUR 中删除
arch.config.aur=AUR 软件包
arch.config.aur.tip=允许管理 AUR 软件包。必须安装 git。
arch.config.aur_rebuild_detector=检查重新安装需求
arch.config.aur_rebuild_detector.tip=检查使用旧库版本构建的软件包是否需要重新安装。如果需要重新安装软件包，将标记为更新(必须安装 {})。
arch.config.aur_rebuild_detector_no_bin=忽略二进制文件 ({})
arch.config.aur_rebuild_detector_no_bin.tip=是否应忽略由 {} 命名的二进制软件包("package-bin")。
arch.config.automatch_providers=按名称自动匹配依赖项
arch.config.automatch_providers.tip=如果名称匹配，自动将软件包与依赖项关联。否则，将显示给定依赖项的所有提供者。
arch.config.aur_build_dir=构建目录
arch.config.aur_build_dir.tip=定义 AUR 软件包将构建的自定义目录。默认: {}。
arch.config.aur_build_only_chosen=仅构建已选择项
arch.config.aur_build_only_chosen.tip=一些 AUR 软件包与其他软件包共享相同的 PKGBUILD 文件，该文件为每个软件包定义了构建说明。启用此属性将确保仅构建已选择的软件包。
arch.config.aur_remove_build_dir=删除构建目录
arch.config.aur_remove_build_dir.tip=操作完成后是否应删除软件包生成的构建目录。
arch.config.categories_exp=类别过期
arch.config.categories_exp.tip=定义存储在磁盘上的软件包类别映射文件的过期时间(以小时为单位)。使用 0 以便在初始化期间始终更新。
arch.config.clean_cache=删除旧版本
arch.config.clean_cache.tip=在卸载期间是否应删除磁盘缓存中的软件包的旧版本
arch.config.check_dependency_breakage=检查依赖版本破坏
arch.config.check_dependency_breakage.tip=在验证升级要求期间是否还必须检查依赖项的特定版本。例如：软件包 A 依赖于 B 的版本 1.0。
arch.config.edit_aur_pkgbuild=编辑 PKGBUILD
arch.config.edit_aur_pkgbuild.tip=是否应在安装/升级/降级 AUR 软件包之前显示其 PKGBUILD 文件以进行编辑
arch.config.aur_idx_exp=索引过期
arch.config.aur_idx_exp.tip=定义存储在磁盘上的 AUR 索引在初始化过程中被视为最新的期限(以小时为单位)。使用 0 以便在初始化期间始终更新。
arch.config.mirrors_sort_limit=镜像排序限制
arch.config.mirrors_sort_limit.tip=定义将用于速度排序的最大镜像数。使用 0 不设限制，或者留空以禁用排序。
arch.config.optimize=优化
arch.config.optimize.tip=将使用优化的设置，以使软件包的安装、升级和降级更快，否则将使用系统设置。
arch.config.pacman_mthread_download=多线程下载(仓库)
arch.config.pacman_mthread_download.tip=是否应使用支持线程的工具(可能更快)下载仓库软件包。必须安装 pacman-mirrors。
arch.config.prefer_repository_provider=优先使用仓库依赖项
arch.config.prefer_repository_provider.tip=在多个外部提供程序中，是否自动选择与给定依赖项相关的仓库软件包。
arch.config.refresh_mirrors=启动时刷新镜像
arch.config.refresh_mirrors.tip=在启动时每天刷新一次软件包镜像
arch.config.repos=仓库软件包
arch.config.suggest_optdep_select=Auto-select optional dependencies
arch.config.suggest_optdep_select.tip=Auto-selects available optional dependencies when installing packages
arch.config.repos.tip=允许管理来自仓库集的软件包
arch.config.suggest_optdep_uninstall=卸载可选依赖项
arch.config.suggest_optdep_uninstall.tip=是否应建议卸载已卸载软件包的关联可选依赖项。将仅建议不是其他软件包的依赖项的可选依赖项。
arch.config.suggest_unneeded_uninstall=卸载不需要的依赖项
arch.config.suggest_unneeded_uninstall.tip=是否应建议卸载与已卸载软件包显然不再需要的依赖项。启用此属性会自动禁用属性 {}。
arch.config.suggestions_exp=建议过期
arch.config.suggestions_exp.tip=定义存储在磁盘中的建议被视为最新的期限(以小时为单位)。使用 0 如果您始终希望更新它们。
arch.config.sync_dbs=同步软件包数据库
arch.config.sync_dbs.tip=在第一次安装、升级或降级软件包之前，每天同步一次软件包数据库。此选项有助于防止这些操作期间的错误。
arch.config.sync_dbs_start.tip=在初始化期间每天同步一次软件包数据库
arch.custom_action.clean_cache=清理缓存
arch.custom_action.clean_cache.desc=从磁盘缓存中删除所有下载的软件包文件
arch.custom_action.clean_cache.fail=清理缓存时发生错误
arch.custom_action.clean_cache.msg1=缓存是存储旧软件包版本文件的系统目录
arch.custom_action.clean_cache.msg2=清理它会释放存储空间，而不会损害您的系统
arch.custom_action.clean_cache.msg3=还有下载的软件包存在完整性问题，阻止了某些操作
arch.custom_action.clean_cache.no_dir=缓存目录 {} 不存在
arch.custom_action.clean_cache.status=清理缓存
arch.custom_action.clean_cache.success=缓存成功清理！
arch.custom_action.refresh_dbs=同步软件包数据库
arch.custom_action.refresh_dbs.desc=同步可用仓库上的软件包
arch.custom_action.refresh_dbs.failed=无法同步软件包数据库
arch.custom_action.refresh_mirrors=刷新镜像
arch.custom_action.refresh_mirrors.desc=允许选择仓库镜像并按最快的顺序排列它们
arch.custom_action.refresh_mirrors.failed=无法刷新镜像
arch.custom_action.refresh_mirrors.location.all=全部
arch.custom_action.refresh_mirrors.location.all.tip=如果选中此选项，其他选项将被忽略。
arch.custom_action.refresh_mirrors.select_label=选择所需的位置
arch.custom_action.refresh_mirrors.status.sorting=按速度排序镜像
arch.custom_action.refresh_mirrors.status.updating=正在更新镜像
arch.custom_action.setup_snapd=检查 Snap 支持
arch.custom_action.setup_snapd.desc=检查系统上是否正确启用了 Snap 支持
snap.custom_action.setup_snapd.missing_link=为 {} 创建链接 {}
arch.custom_action.setup_snapd.status=检查 Snap 支持
snap.custom_action.setup_snapd.ready=准备就绪！
snap.custom_action.setup_snapd.ready.body=系统已准备好使用 Snaps！
snap.custom_action.setup_snapd.required_actions=使 Snaps 正常工作所需的操作
snap.custom_action.setup_snapd.service_disabled=启用服务 {}
snap.custom_action.setup_snapd.service_inactive=启动服务 {}
arch.custom_action.upgrade_system=快速系统升级
arch.custom_action.upgrade_system.desc=尝试使用单个 pacman 调用升级系统
arch.custom_action.upgrade_system.no_updates=没有可用的更新
arch.custom_action.upgrade_system.pkgs=以下软件包将被升级
arch.custom_action.upgrade_system.status=升级系统
arch.custom_action.upgrade_system.substatus=升级软件包
arch.custom_action.upgrade_system.success.line1=系统成功升级！
arch.custom_action.upgrade_system.success.line2=某些更改可能需要重新启动系统才能生效。
arch.custom_action.upgrade_system.success.line3=现在重新启动吗？
arch.dialog.providers.line1=某些依赖项有多个提供者
arch.dialog.providers.line2=选择您想要的提供者
arch.downgrade.error=错误
arch.downgrade.impossible=无法降级 {}
arch.downgrade.install_older=安装较旧版本
arch.downgrade.reading_commits=读取仓库提交
arch.downgrade.repo_pkg.no_versions=磁盘上找不到旧版本
arch.downgrade.searching_stored=在磁盘上查找旧版本
arch.downgrade.version_found=找到当前软件包版本
arch.aur.error.missing_root_dep={dep} 未安装，但在以 {root} 用户身份安装 {aur} 软件包时需要
arch.aur.error.add_builder_user=无法创建构建 {aur} 软件包的用户 {user}
arch.info.00_pkg_build=pkgbuild
arch.info.00_url=URL
arch.info.01_id=id
arch.info.02_name=name
arch.info.03_description=描述
arch.info.03_version=版本
arch.info.04_exec=可执行文件
arch.info.04_orphan=孤儿
arch.info.04_orphan.true=yes
arch.info.04_orphan.false=no
arch.info.04_out_of_date=过时
arch.info.04_out_of_date.true=yes
arch.info.04_out_of_date.false=no
arch.info.04_popularity=流行度
arch.info.05_votes=投票
arch.info.06_package_base=软件包基础
arch.info.07_maintainer=维护者
arch.info.08_first_submitted=首次提交
arch.info.09_last_modified=上次修改
arch.info.10_url=下载链接
arch.info.11_pkg_build_url=pkgbuild 链接
arch.info.12_makedepends=编译依赖项
arch.info.13_dependson=安装依赖项
arch.info.13_pkg_build=pkgbuild
arch.info.14_installed_files=已安装文件
arch.info.14_optdepends=可选依赖项
arch.info.15_checkdepends=检查依赖项
arch.info.arch=架构
arch.info.arch.any=任意
arch.info.architecture=体系结构
arch.info.architecture.any=任意
arch.info.build date=构建日期
arch.info.conflicts with=与之冲突
arch.info.depends=依赖
arch.info.depends on=取决于
arch.info.description=描述
arch.info.download size=下载大小
arch.info.install date=安装日期
arch.info.install reason=安装原因
arch.info.install reason.explicitly installed=明确安装
arch.info.install reason.installed as a dependency for another package=作为其他软件包的依赖项安装
arch.info.install script=安装脚本
arch.info.install script.no=no
arch.info.installed files=已安装文件
arch.info.installed size=已安装大小
arch.info.last_modified=上次修改
arch.info.license=许可证
arch.info.licenses=许可证
arch.info.licenses.custom=自定义
arch.info.name=名称
arch.info.optdepends=可选依赖项
arch.info.optional deps=可选依赖项
arch.info.optional for=可选用于
arch.info.options=选项
arch.info.packager=打包者
arch.info.packager.unknown packager=未知的打包者
arch.info.pkgdesc=描述
arch.info.pkgname=名称
arch.info.pkgrel=版本号
arch.info.pkgver=版本
arch.info.provides=提供
arch.info.replaces=替代
arch.info.required by=被其他软件包需要
arch.info.source=来源
arch.info.url=URL
arch.info.validated by=验证者
arch.info.validated by.signature=签名
arch.info.validpgpkeys=有效的 PGP 密钥
arch.info.version=版本
arch.install.aur.root_error.body=不允许以 root 用户身份安装、升级或降级软件包
arch.install.aur.root_error.title=不允许的操作
arch.install.aur.unknown_key.body=要继续 {} 的安装，需要信任以下公钥 {}
arch.install.aur.unknown_key.title=需要的公钥
arch.install.conflict.popup.body=应用程序 {} 冲突。您必须卸载一个以安装另一个。继续吗？
arch.install.conflict.popup.title=检测到冲突
arch.install.dep_not_found.body.l1=在仓库或 AUR 中未找到所需的依赖项 {dep}{source}。
arch.install.dep_not_found.body.l2=可能是软件包数据库同步问题。
arch.install.dep_not_found.body.l3=操作已取消。
arch.install.dep_not_found.title=未找到依赖项
arch.install.dependency.install=正在安装软件包依赖项 {}
arch.install.dependency.install.error=无法安装依赖软件包：{}。已中止 {} 的安装。
arch.install.error.conflicting_files=软件包 {} 要求覆盖其他已安装软件包的文件
arch.install.error.conflicting_files.proceed=允许
arch.install.error.conflicting_files.stop=取消安装
arch.install.optdep.error=无法安装可选软件包：{}
arch.install.optdeps.request.body=检查下面的可选关联软件包，选择要安装的软件包
arch.install.optdeps.request.success={pkg} 已成功安装！
arch.install.optdeps.request.title=可选依赖项
arch.installing.package=正在安装 {} 软件包
arch.checking_unnecessary_deps=检查是否有不再需要的软件包
arch.makepkg.optimizing=优化编译
arch.missing_deps.body=将安装以下依赖项({deps})
arch.missing_deps.title=缺少的依赖项
arch.missing_deps_found={} 的缺少依赖项
arch.mthread_downloaded.error.cache_dir=无法创建缓存目录 {}
arch.mthread_downloaded.error.cancelled=操作已取消
arch.optdeps.checking=检查 {} 的可选依赖项
arch.package.requires_rebuild=需要重新安装
arch.providers=提供者
arch.substatus.conflicts=检查冲突
arch.substatus.disk_space=检查可用磁盘空间
arch.substatus.integrity=检查软件包完整性
arch.substatus.keyring=检查密钥环
arch.substatus.loading_files=加载软件包文件
arch.substatus.pre_hooks=运行事务前挂钩
arch.substatus.retrieve_pkgs=检索软件包
arch.sync.dep_breakage.reason={} 需要 {}
arch.sync_databases.substatus=同步软件包数据库
arch.sync_databases.substatus.error=无法同步软件包数据库
arch.sync_databases.substatus.synchronized=已同步
arch.task.aur.index.status=生成本地 AUR 索引
arch.task.aur.index.substatus.checking=检查更新
arch.task.aur.index.substatus.download=正在下载 AUR 索引
arch.task.aur.index.substatus.error.download=下载索引时连接错误
arch.task.aur.index.substatus.error.no_data=错误：空索引
arch.task.aur.index.substatus.gen_index=生成索引
arch.task.checking_settings=检查设置
arch.task.disabled=已禁用
arch.task.disk_cache=索引化软件包数据
arch.task.disk_cache.checking=检查索引
arch.task.disk_cache.indexed=已索引
arch.task.disk_cache.indexing=正在索引
arch.task.disk_cache.reading_files=正在读取文件
arch.task.disk_cache.waiting_aur_index=等待 {}
arch.task.mirrors=刷新镜像
arch.task.mirrors.cached=已刷新
arch.task.optimizing=优化 {}
arch.task.sync_sb.status=更新 {}
arch.uninstall.clean_cached.error=无法删除磁盘上找到的旧 {} 版本
arch.uninstall.clean_cached.substatus=正在从磁盘中删除旧版本
arch.uninstall.error.hard_dep_in_hold=无法卸载 {}，因为它的某个依赖关系被标记为 "InHold"
arch.uninstall.required_by=以下软件包({no})依赖于 {pkgs} 以正常工作
arch.uninstall.required_by.warn=必须卸载它们以便继续
arch.uninstall.unnecessary.all=将卸载以下 {} 软件包
arch.uninstall.unnecessary.cancel=保留
arch.uninstall.unnecessary.l1=软件包已成功卸载！
arch.uninstall.unnecessary.l2=以下软件包似乎不再需要
arch.uninstall.unnecessary.proceed=卸载
arch.uninstalling.conflict=正在卸载冲突的软件包
arch.uninstalling.conflict.fail=无法卸载冲突的软件包：{}
arch.update.disabled.tooltip=此软件包只能通过 "快速系统升级" 操作升级
arch.update_summary.conflict_between={} 与 {} 冲突
arch.update_summary.to_install.dep_conflict={} 与依赖项 {} 冲突
arch.update_summary.to_update.conflicts_dep={} 与 {} 的依赖项冲突
arch.update_summary.to_update.dep_conflicts={} 的依赖项与 {} 冲突
arch.upgrade.caching_pkgs_data=正在缓存更新数据
arch.upgrade.error.conflicting_files=正在升级的一些软件包要求覆盖其他已安装软件包的文件
arch.upgrade.error.dep_breakage=检测到一些依赖关系破坏问题
arch.upgrade.error.dep_breakage.item={} 的新版本破坏了已安装版本的 {} 依赖关系
arch.upgrade.error.dep_breakage.proceed=仍要继续
arch.upgrade.error.dep_breakage.stop=取消升级
arch.upgrade.conflicting_files.proceed=允许并继续
arch.upgrade.conflicting_files.stop=取消升级
arch.upgrade.fail=软件包 {} 升级失败
arch.upgrade.mthreaddownload.fail=无法下载所有升级软件包
arch.upgrade.success=软件包 {} 升级成功
arch.upgrade.upgrade_aur_pkgs=正在升级 AUR 软件包
arch.upgrade.upgrade_repo_pkgs=正在升级来自仓库的软件包
arch.warning.disabled={} 似乎未安装。无法管理 Arch / AUR 软件包。
arch.warning.aur_missing_dep={} 似乎未安装。无法管理 AUR 软件包。
arch_repo.history.1_version=版本
arch_repo.history.2_release=发布
arch_repo.history.3_date=日期
aur.history.1_version=版本
aur.history.2_release=发布
aur.history.3_date=日期
category.orphan=孤儿
category.out_of_date=过时
gem.arch.info=适用于基于 Arch Linux 的发行版的软件包
gem.arch.label=Arch
gem.arch.type.arch_repo.label=Arch - 仓库
gem.arch.type.aur.label=Arch - AUR
