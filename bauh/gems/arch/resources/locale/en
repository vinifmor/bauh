arch.action.rebuild_check.allow=Allow reinstallation check
arch.action.rebuild_check.allow.desc=Allows to verify the need of reinstalling the package
arch.action.rebuild_check.allow.status=Allowing reinstallation check
arch.action.rebuild_check.allow.confirm=Allow reinstallation check for {}?
arch.action.rebuild_check.ignore=Ignore reinstallation check
arch.action.rebuild_check.ignore.desc=Do not verify if the package needs to be reinstalled on the system
arch.action.rebuild_check.ignore.status=Ignoring reinstallation check
arch.action.rebuild_check.ignore.confirm=Ignore reinstallation check for {}?
arch.action.db_locked.body.l1=The system's package database is locked.
arch.action.db_locked.body.l2=It is necessary to unlock it to continue.
arch.action.db_locked.confirmation=Unlock and continue
arch.action.db_locked.error=It was not possible to unlock the database.
arch.action.db_locked.title=Database locked
arch.action.disable_pkgbuild_edition=Unmark PKGBUILD as editable
arch.action.disable_pkgbuild_edition.confirm=Unmark PKGBUILD of {} as editable?
arch.action.disable_pkgbuild_edition.desc=Do not allow the package's PKGBUILD file to be edited before updating it
arch.action.disable_pkgbuild_edition.status=Unmarking PKGBUILD as editable
arch.action.enable_pkgbuild_edition=Mark PKGBUILD as editable
arch.action.enable_pkgbuild_edition.confirm=Mark PKGBUILD of {} as editable?
arch.action.enable_pkgbuild_edition.desc=Allows the package's PKGBUILD file to be edited before updating it
arch.action.enable_pkgbuild_edition.status=Marking PKGBUILD as editable
arch.action.reinstall=Reinstall
arch.action.reinstall.desc=Tries to install the package again
arch.action.reinstall.status=Reinstalling
arch.action.reinstall.confirm=Do you want to reinstall {}?
arch.action.reinstall.error.no_apidata=It was not possible to retrieve information of {} from AUR
arch.aur.action.edit_pkgbuild.body=Edit the PKGBUILD file of {} before continuing?
arch.aur.install.pgp.body=To install {} is necessary to receive the following PGP keys
arch.aur.install.pgp.receive_fail=Could not receive PGP key {}
arch.aur.install.pgp.sign_fail=Could not sign PGP key {}
arch.aur.install.pgp.substatus=Receiving PGP key {}
arch.aur.install.pgp.success=PGP keys received and signed
arch.aur.install.pgp.title=PGP keys required
arch.aur.install.unknown_key.receive_error=Could not receive public key {}
arch.aur.install.unknown_key.status=Receiving public key {}
arch.aur.install.validity_check.body=Some of the source-files needed for {} installation are not healthy.
arch.aur.install.validity_check.proceed=Do you want to continue anyway? (not recommended)
arch.aur.install.validity_check.title=Integrity issues {}
arch.aur.install.verifying_pgp=Verifying PGP keys
arch.aur.build.list_output=Checking built files
arch.aur.sync.several_names.popup.body=The definition file (PKGBUILD) of {} configures the build of other packages
arch.aur.sync.several_names.popup.bt_only_chosen=Build only {}
arch.aur.sync.several_names.popup.bt_selected=Build selected too
arch.building.package=Building package {}
arch.can_work.not_arch_distro=Only available for ArchLinux based distributions
arch.checking.conflicts=Checking any conflicts with {}
arch.checking.deps=Checking {} dependencies
arch.checking.missing_deps=Verifying missing dependencies of {}
arch.clone=Cloning the AUR repository {}
arch.category.remove_from_aur=Removed from AUR
arch.config.aur=AUR packages
arch.config.aur.tip=It allows to manage AUR packages. git must be installed.
arch.config.aur_rebuild_detector=Check reinstallation need
arch.config.aur_rebuild_detector.tip=It checks if packages built with old library versions require to be rebuilt. If a package needs to be rebuilt, it will be marked for update ({} must be installed)
arch.config.aur_rebuild_detector_no_bin=Ignore binaries ({})
arch.config.aur_rebuild_detector_no_bin.tip=If binary packages named as "package-bin" should be ignored by {} ({})
arch.config.automatch_providers=Auto-match dependency by name
arch.config.automatch_providers.tip=It associates automatically a package to a dependency if both names match. Otherwise all providers for a given dependency will be displayed.
arch.config.aur_build_dir=Build directory
arch.config.aur_build_dir.tip=It define a custom directory where the AUR packages will be built. Default: {}.
arch.config.aur_build_only_chosen=Build only chosen
arch.config.aur_build_only_chosen.tip=Some AUR packages have a common PKGBUILD shared with other packages and that defines build instructions for each one. This property enabled will ensure that only the chosen package will be built.
arch.config.aur_remove_build_dir=Remove build directory
arch.config.aur_remove_build_dir.tip=If a package's generated build directory should be removed after the operations is finished.
arch.config.categories_exp=Categories expiration
arch.config.categories_exp.tip=It defines the expiration time (in HOURS) of the packages categories mapping file stored in disc. Use 0 so that it is always updated during initialization.
arch.config.clean_cache=Remove old versions
arch.config.clean_cache.tip=Whether old versions of a package stored on disk should be removed during uninstall
arch.config.check_dependency_breakage=Check dependency version breakage
arch.config.check_dependency_breakage.tip=If, during the verification of upgrade requirements, specific versions of dependencies must also be checked. Example: package A depends on version 1.0 of B.
arch.config.edit_aur_pkgbuild=Edit PKGBUILD
arch.config.edit_aur_pkgbuild.tip=If the PKGBUILD file of an AUR package should be displayed for editing before its installation/upgrade/downgrade
arch.config.aur_idx_exp=Index expiration
arch.config.aur_idx_exp.tip=It defines the period (in HOURS) for the AUR index stored in disc to be considered up to date during the initialization process. Use 0 so that it is always updated.
arch.config.mirrors_sort_limit=Mirrors sort limit
arch.config.mirrors_sort_limit.tip=Defines the maximum number of mirrors that will be used for speed sorting. Use 0 for no limit or leave it blank to disable sorting.
arch.config.optimize=Optimize
arch.config.optimize.tip=Optimized settings will be used in order to make the packages installation, upgrading and downgrading faster, otherwise the system settings will be used
arch.config.pacman_mthread_download=Multi-threaded download (repositories)
arch.config.pacman_mthread_download.tip=Whether the repository packages should be downloaded with a tool that works with threads (it may be faster). pacman-mirrors must be installed.
arch.config.prefer_repository_provider=Prefer repository dependencies
arch.config.prefer_repository_provider.tip=Automatically picks the single package from the repositories among several external ({}) available as the provider for a given dependency
arch.config.refresh_mirrors=Refresh mirrors on startup
arch.config.refresh_mirrors.tip=Refresh the package mirrors once a day on startup
arch.config.repos=Repositories packages
arch.config.repos.tip=It allows to manage packages from the repositories set
arch.config.suggest_optdep_uninstall=Uninstall optional dependencies
arch.config.suggest_optdep_uninstall.tip=If the optional dependencies associated with uninstalled packages should be suggested for uninstallation. Only the optional dependencies that are not dependencies of other packages will be suggested.
arch.config.suggest_unneeded_uninstall=Uninstall unneeded dependencies
arch.config.suggest_unneeded_uninstall.tip=If the dependencies apparently no longer necessary associated with the uninstalled packages should be suggested for uninstallation. When this property is enabled it automatically disables the property {}.
arch.config.suggestions_exp=Suggestions expiration
arch.config.suggestions_exp.tip=It defines the period (in hours) in which the suggestions stored in disc will be considered up to date. Use 0 if you always want to update them.
arch.config.sync_dbs=Synchronize packages databases
arch.config.sync_dbs.tip=Synchronizes the package databases once a day before the  first package installation, upgrade or downgrade. This option helps to prevent errors during these operations.
arch.config.sync_dbs_start.tip=Synchronizes the package databases during the initialization once a day
arch.custom_action.clean_cache=Clean cache
arch.custom_action.clean_cache.desc=Removes all the downloade package files from the disk cache
arch.custom_action.clean_cache.fail=An error occurred while cleaning the cache
arch.custom_action.clean_cache.msg1=The cache is a system directory where files of old package versions are stored
arch.custom_action.clean_cache.msg2=Cleaning it frees storage space without harming your system
arch.custom_action.clean_cache.msg3=It also helps when there are downloaded packages with integrity issues blocking an action
arch.custom_action.clean_cache.no_dir=The cache directory {} does not exist
arch.custom_action.clean_cache.status=Cleaning cache
arch.custom_action.clean_cache.success=Cache successfully cleaned!
arch.custom_action.refresh_dbs=Synchronize package databases
arch.custom_action.refresh_dbs.desc=Synchronizes the available packages on the repositories
arch.custom_action.refresh_dbs.failed=It was not possible to synchronize the package databases
arch.custom_action.refresh_mirrors=Refresh mirrors
arch.custom_action.refresh_mirrors.desc=Allows to choose the repository mirrors and sort them by the fastest
arch.custom_action.refresh_mirrors.failed=It was not possible to refresh the mirrors
arch.custom_action.refresh_mirrors.location.all=All
arch.custom_action.refresh_mirrors.location.all.tip=If this option is checked, the others will be ignored.
arch.custom_action.refresh_mirrors.select_label=Check the desired locations
arch.custom_action.refresh_mirrors.status.sorting=Sorting mirrors by speed
arch.custom_action.refresh_mirrors.status.updating=Updating mirrors
arch.custom_action.setup_snapd=Check Snaps support
arch.custom_action.setup_snapd.desc=Checks if the Snaps support are properly enabled on the system
snap.custom_action.setup_snapd.missing_link=Create the link {} for {}
arch.custom_action.setup_snapd.status=Checking Snaps support
snap.custom_action.setup_snapd.ready=Ready!
snap.custom_action.setup_snapd.ready.body=The system is ready to work with Snaps!
snap.custom_action.setup_snapd.required_actions=Actions required for Snaps to work correctly
snap.custom_action.setup_snapd.service_disabled=Enable the service {}
snap.custom_action.setup_snapd.service_inactive=Start the service {}
arch.custom_action.upgrade_system=Quick system upgrade
arch.custom_action.upgrade_system.desc=Tries to upgrade the system with a single pacman call
arch.custom_action.upgrade_system.no_updates=There are no updates available
arch.custom_action.upgrade_system.pkgs=The packages below will be upgraded
arch.custom_action.upgrade_system.status=Upgrading system
arch.custom_action.upgrade_system.substatus=Upgrading packages
arch.custom_action.upgrade_system.success.line1=System successfully upgraded!
arch.custom_action.upgrade_system.success.line2=Some changes may require a system restart to take effect.
arch.custom_action.upgrade_system.success.line3=Restart now?
arch.dialog.providers.line1=There are multiple providers for some dependencies
arch.dialog.providers.line2=Select those you want
arch.downgrade.error=Error
arch.downgrade.impossible=It is not possible to downgrade {}
arch.downgrade.install_older=Installing older version
arch.downgrade.reading_commits=Reading the repository commits
arch.downgrade.repo_pkg.no_versions=No old version found on disk
arch.downgrade.searching_stored=Looking for old versions on disk
arch.downgrade.version_found=Current package version found
arch.aur.error.missing_root_dep={dep} is not installed and is required for installing {aur} packages as the {root} user
arch.aur.error.add_builder_user=It was not possible to create the user {user} for building {aur} packages
arch.info.00_pkg_build=pkgbuild
arch.info.00_url=URL
arch.info.01_id=id
arch.info.02_name=name
arch.info.03_description=description
arch.info.03_version=version
arch.info.04_exec=Executable
arch.info.04_orphan=orphan
arch.info.04_orphan.true=yes
arch.info.04_orphan.false=no
arch.info.04_out_of_date=out of date
arch.info.04_out_of_date.true=yes
arch.info.04_out_of_date.false=no
arch.info.04_popularity=popularity
arch.info.05_votes=votes
arch.info.06_package_base=package base
arch.info.07_maintainer=maintainer
arch.info.08_first_submitted=first submitted
arch.info.09_last_modified=last modified
arch.info.10_url=url download
arch.info.11_pkg_build_url=url pkgbuild
arch.info.12_makedepends=compilation dependencies
arch.info.13_dependson=installation dependencies
arch.info.13_pkg_build=pkgbuild
arch.info.14_installed_files=Installed files
arch.info.14_optdepends=optional dependencies
arch.info.15_checkdepends=checking dependencies
arch.info.arch=arch
arch.info.arch.any=any
arch.info.architecture=architecture
arch.info.architecture.any=any
arch.info.build date=build date
arch.info.conflicts with=conflicts with
arch.info.depends=depends
arch.info.depends on=depends on
arch.info.description=description
arch.info.download size=Download size
arch.info.install date=install date
arch.info.install reason=install reason
arch.info.install reason.explicitly installed=explicitly installed
arch.info.install reason.installed as a dependency for another package=dependency of another package
arch.info.install script=install script
arch.info.install script.no=no
arch.info.installed files=installed files
arch.info.installed size=installed size
arch.info.last_modified=last modified
arch.info.license=license
arch.info.licenses=licenses
arch.info.licenses.custom=custom
arch.info.name=name
arch.info.optdepends=optional dependencies
arch.info.optional deps=optional dependencies
arch.info.optional for=optional for
arch.info.options=options
arch.info.packager=packager
arch.info.packager.unknown packager=unknown
arch.info.pkgdesc=description
arch.info.pkgname=name
arch.info.pkgrel=release
arch.info.pkgver=version
arch.info.provides=provides
arch.info.replaces=replaces
arch.info.required by=required by
arch.info.source=source
arch.info.url=url
arch.info.validated by=validated by
arch.info.validated by.signature=signature
arch.info.validpgpkeys=valid PGP keys
arch.info.version=version
arch.install.aur.root_error.body=It is not allowed to install, upgrade or downgrade a package as the root user
arch.install.aur.root_error.title=Action not allowed
arch.install.aur.unknown_key.body=To continue {} installation is necessary to trust the following public key {}
arch.install.aur.unknown_key.title=Public key required
arch.install.conflict.popup.body=The applications {} are in conflict. You must uninstall one to install the other. Continue?
arch.install.conflict.popup.title=Conflict detected
arch.install.dep_not_found.body.l1=Required dependency {dep}{source} was not found on the repositories nor AUR.
arch.install.dep_not_found.body.l2=It might be a package database synchronization problem.
arch.install.dep_not_found.body.l3=Operation cancelled.
arch.install.dep_not_found.title=Dependency not found
arch.install.dependency.install=Installing package dependency {}
arch.install.dependency.install.error=Could not install the dependent packages: {}. Installation of {} aborted.
arch.install.error.conflicting_files=The package {} wants to overwrite files from other installed packages
arch.install.error.conflicting_files.proceed=Allow
arch.install.error.conflicting_files.stop=Cancel installation
arch.install.optdep.error=Could not install the optional packages: {}
arch.install.optdeps.request.body=Check the optional associated packages below that you want to install
arch.install.optdeps.request.success={pkg} was successfully installed!
arch.install.optdeps.request.title=Optional dependencies
arch.installing.package=Installing {} package
arch.checking_unnecessary_deps=Checking if there are packages no longer needed
arch.makepkg.optimizing=Optimizing the compilation
arch.missing_deps.body=The following dependencies ({deps}) will be installed
arch.missing_deps.title=Missing dependencies
arch.missing_deps_found=Missing dependencies for {}
arch.mthread_downloaded.error.cache_dir=It was not possible to create the cache directory {}
arch.mthread_downloaded.error.cancelled=Operation cancelled
arch.optdeps.checking=Checking {} optional dependencies
arch.package.requires_rebuild=It needs to be reinstalled
arch.providers=providers
arch.substatus.conflicts=Checking for conflicts
arch.substatus.disk_space=Checking available disk space
arch.substatus.integrity=Checking packages integrity
arch.substatus.keyring=Checking keyring
arch.substatus.loading_files=Loading package files
arch.substatus.pre_hooks=Running pre-transaction hooks
arch.substatus.retrieve_pkgs=Retrieving packages
arch.sync.dep_breakage.reason={} requires {}
arch.sync_databases.substatus=Synchronizing package databases
arch.sync_databases.substatus.error=It was not possible to synchronize the package database
arch.sync_databases.substatus.synchronized=Synchronized
arch.task.aur.index.status=Generating local AUR index
arch.task.aur.index.substatus.checking=Checking for updates
arch.task.aur.index.substatus.download=Downloading the AUR index
arch.task.aur.index.substatus.error.download=Connection error while downloading the index
arch.task.aur.index.substatus.error.no_data=Error: empty index
arch.task.aur.index.substatus.gen_index=Generating index
arch.task.checking_settings=Checking settings
arch.task.disabled=Disabled
arch.task.disk_cache=Indexing packages data
arch.task.disk_cache.checking=Checking index
arch.task.disk_cache.indexed=Indexed
arch.task.disk_cache.indexing=Indexing
arch.task.disk_cache.reading_files=Reading files
arch.task.disk_cache.waiting_aur_index=Waiting {}
arch.task.mirrors=Refreshing mirrors
arch.task.mirrors.cached=Refreshed
arch.task.optimizing=Optimizing {}
arch.task.sync_sb.status=Updating {}
arch.uninstall.clean_cached.error=It was not possible to remove old {} versions found on disk
arch.uninstall.clean_cached.substatus=Removing old versions from disk
arch.uninstall.error.hard_dep_in_hold=It is not possible to uninstall {} because one of its dependencies is marked as "InHold"
arch.uninstall.required_by=The packages ({no}) below depend on {pkgs} to work properly
arch.uninstall.required_by.warn=It is necessary to uninstall them as well to proceed
arch.uninstall.unnecessary.all=The following {} packages will be uninstalled
arch.uninstall.unnecessary.cancel=Keep
arch.uninstall.unnecessary.l1=Packages successfully uninstalled!
arch.uninstall.unnecessary.l2=The packages below seem to be no longer necessary
arch.uninstall.unnecessary.proceed=Uninstall
arch.uninstalling.conflict=Uninstalling conflicting packages
arch.uninstalling.conflict.fail=It was not possible to uninstall the conflicting packages: {}
arch.update.disabled.tooltip=This package can oly be upgrade through the action "Quick system upgrade"
arch.update_summary.conflict_between=Conflict between {} and {}
arch.update_summary.to_install.dep_conflict=Conflict between the dependencies {} and {}
arch.update_summary.to_update.conflicts_dep=Conflicts with the dependency {} of {}
arch.update_summary.to_update.dep_conflicts=Dependency {} conflicts with {}
arch.upgrade.caching_pkgs_data=Caching updates data
arch.upgrade.error.conflicting_files=Some of the packages being upgraded want to overwrite files of another installed packages
arch.upgrade.error.dep_breakage=Some dependency breakage issues have been detected
arch.upgrade.error.dep_breakage.item=The new version of {} breaks the dependency {} required by the installed version of {}
arch.upgrade.error.dep_breakage.proceed=Proceed anyway
arch.upgrade.error.dep_breakage.stop=Cancel upgrade
arch.upgrade.conflicting_files.proceed=Allow and continue
arch.upgrade.conflicting_files.stop=Cancel upgrading
arch.upgrade.fail=Package {} upgrade failed
arch.upgrade.mthreaddownload.fail=It was not possible to download all packages for upgrading
arch.upgrade.success=Package {} successfully upgraded
arch.upgrade.upgrade_aur_pkgs=Upgrading AUR packages
arch.upgrade.upgrade_repo_pkgs=Upgrading packages from repositories
arch.warning.disabled={} seems not to be installed. It will not be possible to manage Arch / AUR packages.
arch.warning.aur_missing_dep={} seems not to be installed. It will not be possible to manage AUR packages.
arch_repo.history.1_version=version
arch_repo.history.2_release=release
arch_repo.history.3_date=date
aur.history.1_version=version
aur.history.2_release=release
aur.history.3_date=date
category.orphan=orphan
category.out_of_date=out of date
gem.arch.info=Software packages available for distributions based on Arch Linux
gem.arch.label=Arch
gem.arch.type.arch_repo.label=Arch - Repository
gem.arch.type.aur.label=Arch - AUR
